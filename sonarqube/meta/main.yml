---
galaxy_info:
  author: Jean-Marc Bogninin
  description: Ce r√¥le permet d'installer SonarQube
  company: Smile CI

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Some suggested licenses:
  # - BSD (default)
  # - MIT
  # - GPLv2
  # - GPLv3
  # - Apache
  # - CC-BY
  license: MIT

  min_ansible_version: 2.4

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  # github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  platforms:
    # - name: Fedora
    #   versions:
    #   - all
    #   - 25
    # - name: SomePlatform
    #   versions:
    #   - all
    #   - 1.0
    #   - 7
    #   - 99.99
    - name: Centos
      versions:
        - 7

  galaxy_tags: []
  # List tags for your role here, one per line. A tag is a keyword that describes
  # and categorizes the role. Users find roles by searching for tags. Be sure to
  # remove the '[]' above, if you add tags to this list.
  #
  # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
  #       Maximum 20 tags per role.

dependencies:
  - role: openjdk
    openjdk_version: 11
  - role: postgresql-provider
    postgresql_host: "{{ sonarqube_db_host }}"
    postgresql_databases:
      sonarqube:
        db_name: sonarqube
        user: "{{ sonarqube_db_user }}"
        password: "{{ sonarqube_db_pass }}"
        priv: ALL
  - role: generic-service
    genericservice_root: "{{ sonarqube_root_dir }}"
    genericservice:
      service_type: forking
      name: sonarqube
      source_url: "{{ sonarqube.source_url }}"
      subpath: "{{ sonarqube.subpath }}"
      start_command: "bin/linux-x86-64/sonar.sh start"
      stop_command: "bin/linux-x86-64/sonar.sh stop"
      limitopenfiles: 655360
      system_home: "{{ sonarqube_install_dir }}"
      create_service: true
      create_home: false
      chowned_dirs:
      firewall_port:
        - 9000/tcp
      do_start: false
      env_vars:
        JAVA_HOME: "{{ java_home }}"
  - role: apache-proxy
    when: sonarqube_reverse_proxy
    apache2_proxies:
      sonarqube:
        http_backends: ['127.0.0.1:9000']
