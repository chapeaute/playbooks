---

- name: config | General configuration
  tags:
    - config
    - config_cluster
  template:
    src: "repository/conf/{{ item }}.j2"
    dest: "{{ wso2is_install_dir }}/repository/conf/{{ item }}"
    owner: wso2is
    group: wso2is
    mode: 0640
  with_items:
    - axis2/axis2.xml
  when:
    - wso2is_db_host is defined
    - wso2is_version is version_compare('5.8.0', '<=')
  notify: "Restart wso2is"

- name: config | log4j configurations
  tags:
    - config
    - config_log
  copy:
    src: "repository/conf/{{ item }}"
    dest: "{{ wso2is_install_dir }}/repository/conf/{{ item }}"
    owner: wso2is
    group: wso2is
    mode: 0640
  with_items:
    - log4j.properties
    - log4j2.properties
  notify: "Restart wso2is"

- name: config | Configure to use remote db
  tags:
    - config
    - config_mysql
  template:
    src: "repository/conf/{{ item }}.j2"
    dest: "{{ wso2is_install_dir }}/repository/conf/{{ item }}"
    owner: wso2is
    group: wso2is
    mode: 0640
  with_items:
    - datasources/master-datasources.xml
  notify: "Restart wso2is"
  when:
    - wso2is_db_host is defined
    - wso2is_version is version_compare('5.8.0', '<=')

- name: change configs of log4j
  replace:
    path: "{{ wso2_generic_confs_dir }}/log4j2.properties"
    regexp: .*logger.com-hazelcast.level.*
    replace: logger.com-hazelcast.level = INFO
    owner: wso2is
    group: wso2is
  when: wso2is_nodes|length > 1

- name: Create mysql databases
  import_role:
    name: mysql-provider
  when: wso2is_db_host is defined
  tags: config_mysql
  run_once: true
  vars:
    mysql_host: "{{ wso2is_db_remote_host }}"
    mysql_users:
      - user: "{{ wso2is_db_user }}"
        password: "{{ wso2is_db_pass }}"
        priv: "{{wso2is_db_app_name }}.*:ALL/{{ wso2is_db_shared_name }}.*:ALL"
        host: "%"
        state: present

