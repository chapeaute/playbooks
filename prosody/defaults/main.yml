---

# Global vars
use_satellite_repo: False

# Prosody vars
prosody_base_dir: /var/lib
prosody_root_dir: "{{ prosody_base_dir }}/prosody"
prosody_modules_dir: "{{ prosody_root_dir }}/modules"
prosody_log_dir: /var/log/prosody
prosody_admin_users: []

prosody_extra_modules: []
prosody_modules: "{{ (prosody_base_modules + prosody_extra_modules) | unique }}"
prosody_extra_modules_enabled: []
prosody_modules_enabled: "{{ (prosody_base_modules_enabled + prosody_extra_modules_enabled) | unique }}"

prosody_base_modules_disabled: []
prosody_extra_modules_disabled: []
prosody_modules_disabled: "{{ (prosody_base_modules_disabled + prosody_extra_modules_disabled) | unique }}"

# Wether registration is alowed or not. Not available with all auth backends (not compatible with LDAP for example)
prosody_allow_registration: False

# Specify if services require encryption
prosody_c2s_require_encryption: true
prosody_s2s_require_encryption: true
prosody_s2s_secure_auth: false

# Ldap
prosody_auth_provider: "internal_hashed" #"{{ (ad_auth | default(False) or ldap_auth | default(False)) | ternary('ldap','internal_hashed') }}"
prosody_ldap_servers: "{{ ad_ldap_servers | default([ad_auth | default(False) | ternary(ad_realm | default(samba_realm) | default(ansible_domain) | lower, ldap_uri | default('ldap://' + ansible_domain) | urlsplit('hostname'))]) }}"
prosody_ldap_base: "{{ ad_auth | default(False) | ternary((ad_ldap_user_search_base is defined) | ternary(ad_ldap_user_search_base,'DC=' + ad_realm | default(samba_realm) | default(ansible_domain) | regex_replace('\\.',',DC=')), ldap_user_base + ',' + ldap_base) }}"
prosody_ldap_filter: "{{ ad_auth | default(False) | ternary('(&(objectClass=user)(sAMAccountName=%s))','(&(objectClass=inetOrgPerson)(uid=%s))') }}"
prosody_ldap_starttls: True
# prosody_ldap_bind_dn: CN=prosody,OU=Apps,DC=domain,DC=tld
# prosody_ldap_bind_pass: S3cr3t.

# Ports
prosody_c2s_ports: [5222]
prosody_s2s_ports: [5269]
prosody_http_ports: [5280]
prosody_component_ports: [5347]
