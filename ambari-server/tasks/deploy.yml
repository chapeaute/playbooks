---


- name: retrieve hosts for ambari server deployment
  shell: >
    curl -H "X-Requested-By: ambari" -X GET -u admin:admin http://{{ inventory_hostname }}:8080/api/v1/hosts

- name: retrieve blueprints for ambari server deployment
  shell: >
    curl -H "X-Requested-By: ambari" -X GET -u admin:admin http://{{ inventory_hostname }}:8080/api/v1/hosts

- name: generate blueprints for ambari server deployment
  template:
    src:  blueprint.json.j2
    dest: /tmp/blueprint.json
    mode: 0644
  delegate_to: localhost

- name: upload blueprint for ambari server deployment
  shell: >
    curl -H "X-Requested-By: ambari" -X POST -u admin:admin -d @/tmp/blueprint http://{{ inventory_hostname }}:8080/api/v1/blueprints/{{ ambari_cluster_name }}?validate_topology=false

- name: generate host mapping for ambari server deployment
  template:
    src:  hostmapping.json.j2
    dest: /tmp/hostmapping.json
    mode: 0644
  delegate_to: localhost

- name: deploy ambari server cluster
  shell: >
    curl -H "X-Requested-By: ambari" -X POST -u admin:admin -d @/tmp/hostmapping.json http://{{ inventory_hostname }}:8080/api/v1/clusters/{{ ambari_cluster_name }}

- name: create ambari cluster
  uri:
    url: "http://{{ inventory_hostname }}:8080/api/v1/blueprints/{{ ambari_cluster_name }}?validate_topology=false"
    method: POST
    body: "{{ lookup('file','/tmp/blueprint.json') }}"
    #user: admin
    #password: admin
    headers:
      Content-Type: "application/json"
      Authorization: Basic YWRtaW46YWRtaW4=
      X-Requested-By: "ambari"
    #force_basic_auth: yes
    status_code: 200,201,202,409
    body_format: json

- name: generate hostmapping for ambari server deployment
  template:
    src: hostmapping.json.j2
    dest: /tmp/hostmapping.json
    mode: 0644

- name: capture hostmapping contents
  shell: cat /tmp/hostmapping.json
  register: hostmapping_contents

- name: deploy ambari cluster
  uri:
    url: "http://{{ inventory_hostname }}:8080/api/v1/clusters/{{ ambari_cluster_name  }}"
    method: POST
    user: admin
    password: admin
    headers:
      X-Requested-By: "ambari"
    body: "{{ lookup('file','/tmp/hostmapping.json') }}"
    force_basic_auth: yes
    status_code: 200,201,202,500
    body_format: json
    return_content: yes
  register: ambari_deploy

- debug: "var={{ ambari_deploy }}"

- name: Checking ambari request ID and wait for services to be installed. This may take 3-6 minutes
  uri:
    url: "{{ (ambari_deploy.content | from_json).href }}"
    method: GET
    user: admin
    password: admin
    headers:
       Content-Type: "application/json"
       X-Requested-By: "ambari"
    force_basic_auth: yes
    status_code: 200,201,202
    return_content: yes
  register: cluster_create_task
  delay: 10
  retries: 200
  until: ((cluster_create_task.content|from_json).Requests.request_status == 'COMPLETED' or
         (cluster_create_task.content|from_json).Requests.request_status == 'FAILED' or
         (cluster_create_task.content|from_json).Requests.request_status == 'TIMEDOUT' or
         (cluster_create_task.content|from_json).Requests.request_status == 'ABORTED')

- name: Fail if the cluster create task is in an error state
  fail:
    msg: "Cluster deploy failed. Status is {{ (cluster_create_task.content|from_json).Requests.request_status }}"
  when: ((cluster_create_task.content|from_json).Requests.request_status == 'FAILED' or
         (cluster_create_task.content|from_json).Requests.request_status == 'TIMEDOUT' or
         (cluster_create_task.content|from_json).Requests.request_status == 'ABORTED')

- debug:
    msg: "Ambari server is deploying Ambari. Access via  http://{{ ansible_fqdn }}:8080"
