#!/bin/bash

function usage {
  exec >&2
  echo "usage: $0 hostname"
  exit 1
}

# Parse arguments
dnsserver=127.0.0.1
nsupdatekey="{{ bind_conf_dir }}/K{{ bind_ddns_key_name }}.*.key"

# Sanity check vars
if [ "$#" -ne 1 ]; then
  usage
else
  hostname=$1
  host -t A $hostname | grep "$hostname has address " 2>&1 >/dev/null && ip_address=$(host $hostname | awk '{print $4}')
fi

ip_rev=$(echo $ip_address | sed -r 's/([0-9]{1,3}).([0-9]{1,3}).([0-9]{1,3}).([0-9]{1,3})/\4.\3.\2.\1/')

# Build nsupdate command
cmd_stack=""

# Always specify DNS server for sanity
cmd_stack+=$(echo "server $dnsserver\n")
cmd_stack+=$(echo "update del $hostname\n")
cmd_stack+=$(echo "send\n")

if [ -n "$ip_address" ]; then
  ip_rev=$(echo $ip_address | sed -r 's/([0-9]{1,3}).([0-9]{1,3}).([0-9]{1,3}).([0-9]{1,3})/\4.\3.\2.\1/')
  cmd_stack+=$(echo "update del ${ip_rev}.in-addr.arpa\n")
  cmd_stack+=$(echo "send\n")
fi

# Execute nsupdate
echo -e "${cmd_stack}" | nsupdate -v -k $nsupdatekey 2>&1
