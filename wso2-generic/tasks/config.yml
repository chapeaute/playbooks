---

- name: config | Configure {{  wso2_generic_service_name }} ssl pofiles
  tags: config
  template:
    src: "repository/{{ item }}.j2"
    dest: "{{ wso2_generic_install_dir }}/repository/{{ item }}"
    owner: "{{ wso2_generic_service_name }}"
    group: "{{ wso2_generic_service_name }}"
    mode: 0640
  with_items:
    - resources/security/sslprofiles.xml
  notify: "Restart service"

- name: config | Configure {{  wso2_generic_service_name }}
  tags:
    - config
  include: "config_file.yml file={{ item.key }} configs={{ item.value }}"
  with_dict: "{{ wso2_generic_default_configs | combine(wso2_generic_configs) }}"
  notify: "Restart service"

- name: config | Change user database source
  notify: "Restart service"
  tags:
     - config
     - config_mysql
  replace:
    path: "{{ wso2_generic_confs_dir }}/user-mgt.xml"
    regexp: .*dataSource.*
    replace: <Property name="dataSource">jdbc/{{ wso2_generic_db_user_source }}</Property>
    owner: "{{ wso2_generic_service_name }}"
    group: "{{ wso2_generic_service_name }}"

- name: config | configure registry
  when: 
    - wso2_generic_db_enable
    - wso2_generic_version is version_compare('2.6.0', '<=')
  notify: "Restart service"
  tags:
    - config
    - config_mysql
    - config_registry
  blockinfile:
    dest: "{{ wso2_generic_confs_dir }}/registry.xml"
    insertbefore: "<indexingConfiguration"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      <dbConfig name="govregistry">
        <dataSource>jdbc/WSO2REG_DB</dataSource>
      </dbConfig>

      <remoteInstance url="https://localhost:9443/registry">
          <id>gov</id>
          <dbConfig>govregistry</dbConfig>
          <readOnly>false</readOnly>
          <enableCache>true</enableCache>
          <registryRoot>/</registryRoot>
      </remoteInstance>

      <mount path="/_system/config" overwrite="true">
          <instanceId>instanceid</instanceId>
          <targetPath>/_system/config</targetPath>
      </mount>

      <mount path="/_system/governance" overwrite="true">
          <instanceId>gov</instanceId>
          <targetPath>/_system/governance</targetPath>
      </mount>

# - name: config | Mitigating Cross Site Request Forgery (CSRF) Attacks
#   notify: "Restart service"
#   tags:
#     - config
#     - config_valves
#   blockinfile:
#     dest: "{{ wso2_generic_confs_dir }}/carbon.xml"
#     marker: "<!-- {CSRFPreventionConfig} ANSIBLE MANAGED BLOCK -->"
#     insertbefore: "</Server>"
#     block: |
#       <CSRFPreventionConfig>
#           <CSRFValve>
#               <Enabled>true</Enabled>
#               <!-Enable/Disable CSRF prevention->
#               <Rule>allow</Rule>

#               <!--URL Pattern to skip the CSRF prevention-->
#               <Patterns>
#                   <Pattern>commonauth</Pattern>
#                   <Pattern>samlsso</Pattern>
#                   <Pattern>authenticationendpoint</Pattern>
#                   <Pattern>wso2</Pattern>
#                   <Pattern>oauth2</Pattern>
#                   <Pattern>openid</Pattern>
#                   <Pattern>openidserver</Pattern>
#                   <Pattern>passivests</Pattern>
#                   <Pattern>services</Pattern>
#               </Patterns>

#               <!--List of URL to allow as source to access the system-->
#               <WhiteList>
#                   <Url>https://localhost:9443</Url>
#                   <Url>https://{{ wso2_generic_remote_hostname }}:9443</Url>
#               </WhiteList>
#           </CSRFValve>
#       </CSRFPreventionConfig>

# - name: config | Mitigating Cross Site Scripting (XSS) Attacks
#   notify: "Restart service"
#   tags:
#     - config
#     - config_valves
#   blockinfile:
#     dest: "{{ wso2_generic_confs_dir }}/carbon.xml"
#     insertbefore: "</Server>"
#     marker: "<!-- {XSSPreventionConfig} ANSIBLE MANAGED BLOCK -->"
#     block: |
#       <XSSPreventionConfig>
#           <Enabled>true</Enabled>
#           <Rule>allow</Rule>
#           <Patterns>
#               <Pattern>commonauth</Pattern>
#           </Patterns>
#       </XSSPreventionConfig>

# - name: config | Add security valves to catalina-server.xml
#   notify: "Restart service"
#   tags:
#     - config
#     - config_valves
#   blockinfile:
#     dest: "{{ wso2_generic_confs_dir }}/tomcat/catalina-server.xml"
#     insertbefore: "</Host>"
#     marker: "<!-- {SecurityValves} ANSIBLE MANAGED BLOCK -->"
#     block: |
#       <!-- Security parameters -->
#       <Valve className="org.wso2.carbon.ui.valve.XSSValve"/>
#       <Valve className="org.wso2.carbon.ui.valve.CSRFValve"/>
