[server]
hostname = "{{ wso2_generic_hostname }}"
node_ip = "{{ wso2_generic_hostname }}"
offset={{ wso2_generic_offset }}
mode = "single" #single or ha
base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
#discard_empty_caches = false
server_role = "default"

[super_admin]
username = "{{ wso2_generic_admin_user }}"
password = "{{ wso2_generic_admin_pass }}"
create_admin_account = {{ wso2_generic_admin_create }}

[user_store]
type = "database_unique_id"

[database.apim_db]
type = "{{ wso2_generic_db_type }}"
url = "{{ wso2_generic_db_apim_url }}"
username = "{{ wso2_generic_db_user }}"
password = "{{ wso2_generic_db_password }}"

[database.shared_db]
type = "{{ wso2_generic_db_type }}"
url = "{{ wso2_generic_db_shared_url }}"
username = "{{ wso2_generic_db_user }}"
password = "{{ wso2_generic_db_password }}"

[keystore.primary]
file_name = "{{ ssl_certs_keystore_filename }}.jks"
type = "JKS"
password = "{{ wso2_generic_keystore_pass }}"
alias = "wso2carbon"
key_password = "{{ wso2_generic_keystore_pass }}"

[keystore.internal]
file_name = "{{ ssl_certs_keystore_filename }}.jks"
type = "JKS"
password = "{{ wso2_generic_keystore_pass }}"
alias = "wso2carbon"
key_password = "{{ wso2_generic_keystore_pass }}"

[keystore.tls]
file_name = "{{ ssl_certs_keystore_filename }}.jks"
type = "JKS"
password = "{{ wso2_generic_keystore_pass }}"
alias = "wso2carbon"
key_password = "{{ wso2_generic_keystore_pass }}"

[truststore]
file_name = "{{ ssl_certs_truststore_filename }}.jks"
type = "JKS"
password = "{{ wso2_generic_truststore_pass }}"

[[apim.gateway.environment]]
name = "Production and Sandbox"
type = "hybrid"
display_in_api_console = true
description = "This is a hybrid gateway that handles both production and sandbox token traffic."
show_as_token_endpoint_url = true
service_url = "https://{{ wso2_generic_hostname }}:${mgt.transport.https.port}/services/"
username= "${admin.username}"
password= "${admin.password}"
ws_endpoint = "ws://{{ wso2_generic_remote_hostname }}:9099"
wss_endpoint = "wss://{{ wso2_generic_remote_hostname }}:8099"
http_endpoint = "http://{{ wso2_generic_remote_hostname }}:${http.nio.port}"
https_endpoint = "https://{{ wso2_generic_remote_hostname }}:${https.nio.port}"

# Allow All https senders
[transport.passthru_https.sender.parameters]
HostnameVerifier = "AllowAll"

#[[apim.analytics.url_group]]
#analytics_url =["tcp://analytics1:7611","tcp://analytics2:7611"]
#analytics_auth_url =["ssl://analytics1:7711","ssl://analytics2:7711"]
#type = "loadbalance"

#[[apim.analytics.url_group]]
#analytics_url =["tcp://analytics1:7612","tcp://analytics2:7612"]
#analytics_auth_url =["ssl://analytics1:7712","ssl://analytics2:7712"]
#type = "failover"

[apim.key_manager]
service_url = "https://localhost:${mgt.transport.https.port}/services/"
username = "$ref{super_admin.username}"
password = "$ref{super_admin.password}"
#pool.init_idle_capacity = 50
#pool.max_idle = 100
#key_validation_handler_type = "default"
#key_validation_handler_type = "custom"
#key_validation_handler_impl = "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler"

[apim.devportal]
url = "https://{{ wso2_generic_hostname }}:${mgt.transport.https.port}/devportal"
#enable_application_sharing = false
#if application_sharing_type, application_sharing_impl both defined priority goes to application_sharing_impl
#application_sharing_type = "default" #changed type, saml, default #todo: check the new config for rest api
#application_sharing_impl = "org.wso2.carbon.apimgt.impl.SAMLGroupIDExtractorImpl"
#display_multiple_versions = false
#display_deprecated_apis = false
#enable_comments = true
#enable_ratings = true
#enable_forum = true

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH"]
allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey"]
allow_credentials = false

{% set node =  "node" %}
{% if wso2_generic_ammanager_nodes is iterable %}
{% for node in wso2_generic_ammanager_nodes %}
[[apim.throttling.url_group]]
traffic_manager_urls = ["tcp://{{ node }}:9611"]
#traffic_manager_auth_urls = ["ssl://{{ node }}:9711","ssl://{{ node }}:9711"]
type = "loadbalance"

{% endfor %}
{% endif %}

[[event_handler]]
name="userPostSelfRegistration"
subscriptions=["POST_ADD_USER"]

[service_provider]
sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

[database.local]
url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

[clustering]
membership_scheme = "wka"
domain = "wso2.am.domain"
local_member_host = "{{ wso2_generic_hostname }}"
local_member_port = 4000
members = [{% for item in wso2_generic_amnodes -%}
"{{ item }}:4000" {%- if not loop.last -%}, {% endif -%}
{%- endfor %}]


#[apim.workflow]
#enable = false
#service_url = "https://localhost:9445/bpmn"
#username = "$ref{super_admin.username}"
#password = "$ref{super_admin.password}"
#callback_endpoint = "https://localhost:${mgt.transport.https.port}/api/am/admin/v0.16/workflows/update-workflow-status"
#token_endpoint = "https://localhost:${https.nio.port}/token"
#client_registration_endpoint = "https://localhost:${mgt.transport.https.port}/client-registration/v0.16/register"
#client_registration_username = "$ref{super_admin.username}"
#client_registration_password = "$ref{super_admin.password}"

#data bridge config
#[transport.receiver]
#type = "binary"
#worker_threads = 10
#session_timeout = "30m"
#keystore.file_name = "$ref{keystore.tls.file_name}"
#keystore.password = "$ref{keystore.tls.password}"
#tcp_port = 9611
#ssl_port = 9711
#ssl_receiver_thread_pool_size = 100
#tcp_receiver_thread_pool_size = 100
#ssl_enabled_protocols = ["TLSv1","TLSv1.1","TLSv1.2"]
#ciphers = ["SSL_RSA_WITH_RC4_128_MD5","SSL_RSA_WITH_RC4_128_SHA"]

#[apim.notification]
#from_address = "APIM.com"
#username = "APIM"
#password = "APIM+123"
#hostname = "localhost"
#port = 3025
#enable_start_tls = false
#enable_authentication = true

#[apim.token.revocation]
#notifier_impl = "org.wso2.carbon.apimgt.keymgt.events.TokenRevocationNotifierImpl"
#enable_realtime_notifier = true
#realtime_notifier.ttl = 5000
#enable_persistent_notifier = true
#persistent_notifier.hostname = "https://localhost:2379/v2/keys/jti/"
#persistent_notifier.ttl = 5000
#persistent_notifier.username = "root"
#persistent_notifier.password = "root"

#[apim.idp]
#authorize_endpoint = "https://localhost:${mgt.transport.https.port}/oauth2/authorize"
#oidc_logout_endpoint = "https://localhost:${mgt.transport.https.port}/oidc/logout"

#[apim.jwt]
#enable = true
#encoding = "base64" # base64,base64url
#generator_impl = "org.wso2.carbon.apimgt.keymgt.token.JWTGenerator"
#claim_dialect = "http://wso2.org/claims"
#header = "X-JWT-Assertion"
#signing_algorithm = "SHA256withRSA"
#enable_user_claims = true
#claims_extractor_impl = "org.wso2.carbon.apimgt.impl.token.DefaultClaimsRetriever"

#[apim.oauth_config]
#enable_outbound_auth_header = false
#auth_header = "Authorization"
#revoke_endpoint = "https://localhost:${https.nio.port}/revoke"
#enable_token_encryption = false
#enable_token_hashing = false


#[apim.cache.gateway_token]
#enable = true
#expiry_time = "900s"

#[apim.cache.resource]
#enable = true
#expiry_time = "900s"

#[apim.cache.km_token]
#enable = false
#expiry_time = "15m"

#[apim.cache.recent_apis]
#enable = false

#[apim.cache.scopes]
#enable = true

#[apim.cache.publisher_roles]
#enable = true

#[apim.cache.jwt_claim]
#enable = true
#expiry_time = "15m"

#[apim.cache.tags]
#expiry_time = "2m"

#[apim.analytics]
#enable = false
#store_api_url = "https://localhost:7444"
#username = "$ref{super_admin.username}"
#password = "$ref{super_admin.password}"
#event_publisher_type = "default"
#event_publisher_impl = "org.wso2.carbon.apimgt.usage.publisher.APIMgtUsageDataBridgeDataPublisher"
#publish_response_size = true

[apim.throttling]
enable_data_publishing = false
enable_advanced_throttling = false
#enable_policy_deploy = true
#enable_blacklist_condition = true
#enable_persistence = true
#throttle_decision_endpoints = ["tcp://{{ wso2_generic_hostname }}:5672"]

#[apim.throttling.blacklist_condition]
#start_delay = "5m"
#period = "1h"

#[apim.throttling.jms]
#start_delay = "5m"

#[apim.throttling.event_sync]
#hostName = "0.0.0.0"
#port = 11224

#[apim.throttling.event_management]
#hostName = "0.0.0.0"
#port = 10005
