#!/bin/bash

REALM="{{ freeipa_realm }}"

if [ $# -ne 1 ]; then
    echo "Script must take 1 argument. $0 username" >&2
    exit 1
fi

# User name
user=$1

# Get old user uid and gid
old_uid=$(getent -s files passwd $1 | awk -F: '{print $3}')
old_gid=$(getent -s files passwd $1 | awk -F: '{print $4}')

# Get user main group
group=$(id -gn $user 2>/dev/null)

# Get new user uid and gid
new_uid=$(getent -s sss passwd $user@$REALM | awk -F: '{print $3}')
new_gid=$(getent -s sss passwd $user@$REALM | awk -F: '{print $4}')

if [ -z "$old_uid" -a -z "$new_uid" ]; then
    echo "Couldn't find local user '$user'. Check if user exist in local. Abording account migration..." >&2
    exit 1
elif [ -n "$old_uid" -a -z "$new_uid" ] ; then
    echo "Couldn't find '$user' for realm '$REALM'. Check if '$user' is declared in FreeIPA. Abording account migration..." >&2
    exit 1
elif [ -z "$old_uid" -a -n "$new_uid" ]; then
    echo "Couldn't find local user '$user'. User seems to be already migrate!"
    exit 0
fi

w -h | awk '{print $1}' | sort -n | uniq | grep opsu > /dev/null
if [ $? -eq 0 ]; then
    echo "User '$user' already login, can't migrate account! Abording..." >&2
    exit 1
fi

ps -u $user -o user= > /dev/null
if [ $? -eq 0 ]; then
    echo "Some process are running for User '$user'. Stop it before migrating account! Abording..." >&2
    exit 1
fi

echo "Change UID from $old_uid to $new_uid ($user)"
find / -uid $old_uid -exec chown -h $new_uid {} \+ 2>/dev/null
echo "Change GID from $old_gid to $new_gid ($user)"
find / -gid $old_gid -exec chgrp -h $new_gid {} \+ 2>/dev/null
echo "Remove local user $user"
userdel $user

if [ $? -ne 0 ]; then
    echo "Failed to remove user $user" 2>&1
    exit 1
fi
