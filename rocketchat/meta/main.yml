---
galaxy_info:
  author: Narcisse Konan
  description: This role install rocketchat
  company: SMILE CI

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  license: BSD

  min_ansible_version: 2.7

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  # github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  platforms:
  - name: CentOS
    versions:
    - 7
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
  # List tags for your role here, one per line. A tag is a keyword that describes
  # and categorizes the role. Users find roles by searching for tags. Be sure to
  # remove the '[]' above, if you add tags to this list.
  #
  # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
  #       Maximum 20 tags per role.

dependencies:
  - role: nodejs
    nodejs_version: "{{ rocketchat_nodejs_version }}"
    nodejs_npm_global_packages:
      - inherits
  - role: generic-service
    genericservice_root: "{{ rocketchat_root_dir }}"
    genericservice:
      do_start: False
      name: "{{ rocketchat_service_name }}"
      source_url: "{{ rocketchat.source_url }}"
      subpath: "{{ rocketchat.subpath }}"
      service_type: simple
      start_command: "/usr/local/bin/node {{ rocketchat_install_dir }}/main.js"
      firewall_port:
        - "{{ rocketchat_port }}/tcp"
      chowned_dirs:
      env_vars:
        PORT: "{{ rocketchat_port }}"
        ROOT_URL: "{{ rocketchat_site_url }}"
        MONGO_URL: "{{ rocketchat_mongo_url }}"
        BYPASS_OPLOG_VALIDATION: "{% if rocketchat_mongo_oplog_url is defined %}false{% else %}true{% endif %}"
  - role: ssl-certs
    when:
      - rocketchat_enable_ssl
      - rocketchat_cert_path is defined
  - role: apache-proxy
    apache2_proxies:
      rocketchat:
        ssl:
          enable: "{{ rocketchat_enable_ssl | bool }}"
          redirect_to_https: "{{ rocketchat_enable_ssl | bool }}"
          certificate_file: "{{ rocketchat_cert_path|default(ssl_certs_cert_path) }}"
          certificate_key_file: "{{ rocketchat_key_path|default(ssl_certs_privkey_path) }}"
        server_aliases:
          - "{{ rocketchat_site_url | urlsplit('hostname') }}"
        http_backends:
          - "localhost:{{ rocketchat_port }}"
